resources:
  - repo: self

variables:
  imageRepository: "movatramat"
  containerRegistry: "mova21.azurecr.io"
  dockerfilePath: "$(Build.SourcesDirectory)/Dockerfile"
  tag: "latest"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            inputs:
              command: build
              dockerfile: $(dockerfilePath)
            env:
              EMAIL_SECRET: $(EMAIL_SECRET)
  - stage: Deploy
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: Deploy
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
            env:
              EMAIL_SECRET: $(EMAIL_SECRET)
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: "AzureRM"
              azureSubscription: "Subscription"
              appType: "webAppContainer"
              WebAppName: "mova-tramat-as"
              DockerNamespace: "$(containerRegistry)"
              DockerRepository: "$(imageRepository)"
              DockerImageTag: "$(tag)"
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: "Subscription"
              Action: "Stop Azure App Service"
              WebAppName: "mova-tramat-as"
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: "Subscription"
              Action: "Start Azure App Service"
              WebAppName: "mova-tramat-as"